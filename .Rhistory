cancelled_roc_curve <- ggroc(data = cancelled_model_roc, legacy.axes = TRUE) +
coord_fixed() +
ylab("True positive rate") +
xlab("False positive rate") +
geom_line(data = data.frame(x = c(-Inf, Inf), y = c(-Inf, Inf)), aes(x, y), linetype = "dashed")
cancelled_roc_curve
auc(cancelled_model_roc)
newark_cancelled <- newark_flights
colSums(is.na(newark_cancelled))
newark_cancelled_clean <- newark_cancelled %>%
select(-dep_delay)
newark_cancelled_clean <- newark_cancelled_clean %>%
mutate(tailnum = ifelse(is.na(tailnum), "ABCXYZ", tailnum))
colSums(is.na(newark_cancelled_clean))
newark_cancelled_clean <- newark_cancelled_clean %>%
mutate(cancelled = ifelse(is.na(air_time), TRUE, FALSE)) %>%
select(-air_time)
# measures of busy-ness in newark flights data
newark_cancelled_clean <- newark_cancelled_clean %>%
mutate(date = as.Date(time_hour)) %>%
group_by(date) %>%
mutate(departures_in_day = n()) %>%
ungroup()
newark_cancelled_clean <- newark_cancelled_clean %>%
group_by(time_hour) %>%
mutate(departures_in_hour = n()) %>%
ungroup()
# remove outliers from cancelled flights data
newark_cancelled_clean <- newark_cancelled_clean %>%
mutate(max_distance = quantile(distance, 0.75) + (1.5 * IQR(distance))) %>%
mutate(min_departures_in_day = quantile(departures_in_day, 0.75) -
(1.5 * IQR(departures_in_day))) %>%
filter(distance <= max_distance) %>%
filter(departures_in_day >= min_departures_in_day) %>%
select(-c(max_distance, min_departures_in_day))
newark_cancelled_weather <-
inner_join(newark_cancelled_clean, newark_weather_clean, by = "time_hour") %>%
select(-date, -time_hour) # remove unwanted variables
newark_cancelled_weather_other <-
inner_join(newark_cancelled_weather, plane_data_clean, by = "tailnum") %>%
select(-tailnum) # remove unwanted variables
# class distribution in original dataset
round(prop.table(table(select(newark_cancelled_weather_other, cancelled), exclude = NULL)), 3) * 100
newark_cancelled_weather_other_ROSE <- newark_cancelled_weather_other %>%
mutate(month = as.numeric(month),
day = case_when(
day == "Mon" ~ 1,
day == "Tue" ~ 2,
day == "Wed" ~ 3,
day == "Thu" ~ 4,
day == "Fri" ~ 5,
day == "Sat" ~ 6,
day == "Sun" ~ 7
),
cancelled = as.factor(cancelled),
departures_in_day = as.numeric(departures_in_day),
departures_in_hour = as.numeric(departures_in_hour)
) %>%
select(-c(carrier, dest, engine))
# number of rows of data in newark_cancelled_weather_other dataset
rows = nrow(newark_cancelled_weather_other_ROSE)
# create a training set
sample_set <- sample(rows, rows * 0.75, replace = FALSE)
cancelled_train <- newark_cancelled_weather_other_ROSE[sample_set,]
# create a test set
cancelled_test <- newark_cancelled_weather_other_ROSE[-sample_set,]
# class distribution in original dataset
round(prop.table(table(select(newark_cancelled_weather_other_ROSE, cancelled), exclude = NULL)), 3) * 100
# class distribution in training set
round(prop.table(table(select(cancelled_train, cancelled), exclude = NULL)), 3) * 100
cancelled_train_ROSE <- ROSE(cancelled ~., data = cancelled_train, seed = 1)$data
# class distribution in adjusted training set
round(prop.table(table(select(cancelled_train_ROSE, cancelled), exclude = NULL)), 3) * 100
# class distribution in test set
round(prop.table(table(select(cancelled_test, cancelled), exclude = NULL)), 3) * 100
cancelled_flights_mod1 <- glm(formula = cancelled ~ ., data = cancelled_train_ROSE, family = binomial(link = "logit"))
summary(cancelled_flights_mod1)
# add predictions to test data set
cancelled_flights_test_and_pred <- cancelled_test %>%
add_predictions(cancelled_flights_mod1, type = "response")
# convert predictions to TRUE/FALSE assuming a threshold of 0.5
threshold <- 0.5
cancelled_flights_test_and_pred <- cancelled_flights_test_and_pred %>%
mutate(pred_thresh_0.5 = pred >= threshold)
conf_table_cancelled_flights <- cancelled_flights_test_and_pred %>%
tabyl(cancelled, pred_thresh_0.5)
conf_table_cancelled_flights
knitr::opts_chunk$set(echo = FALSE)
flights_data
# missing values in newark flights data
colSums(is.na(newark_flights))
View(airports_data)
View(flights_data)
flights_data_delayed <- flights_data %>%
filter(origin %in% c("JFK", "EWR", "LGA")) %>%
select(dep_delay, month, origin)
View(flights_data_delayed)
flights_data_delayed <- flights_data %>%
filter(origin %in% c("JFK", "EWR", "LGA")) %>%
select(dep_delay, month, origin) %>%
mutate(flight_count = 1)
flights_data_delayed <- flights_data %>%
filter(origin %in% c("JFK", "EWR", "LGA")) %>%
select(dep_delay, month, origin) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0))
View(flights_data_delayed)
flights_data_delayed %>%
group_by(month, origin) %>%
summarise(flights = sum(flight_count))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)    # suppress "summarise has" grouped output message
library(here)
decathlon <- read_csv(here("data_clean/decathlon_clean.csv"))
decathlon %>%
select(athlete, long_jump) %>%
arrange(desc(long_jump)) %>%
head(1)
decathlon %>%
group_by(competition) %>%
summarise(avg_100m_time = mean(`100m`))
decathlon %>%
group_by(athlete) %>%
summarise(total_points = sum(points)) %>%
arrange(desc(total_points)) %>%
head(1)
decathlon %>%
group_by(competition, athlete) %>%
summarise(shot_put) %>%
slice_max(shot_put, n = 3) %>%
arrange(desc(shot_put))
decathlon <- decathlon %>%
mutate("400m_in_less_50s" = case_when(
`400m` < 50.0 ~ TRUE,
TRUE ~ FALSE
), .after = `400m`)
decathlon %>%
group_by(`400m_in_less_50s`) %>%
summarise(avg_points = mean(points)) %>%
arrange(desc(avg_points))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights = sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed_% = sum(flight_delayed) / sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed_% = sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed = sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed_% = sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed_percent = sum(flight_delayed) / sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed = sum(flight_delayed)) %>%
summarise(flights_total = sum(flight_count))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed = sum(flight_delayed))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(flights_delayed = sum(flight_delayed))
glimpse(flights_data_delayed)
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(delays = sum(flight_delayed))
flights_data_delayed %>%
group_by(origin == "EWR", month) %>%
summarise(delays = sum(flight_delayed))
flights_data_delayed %>%
group_by(origin, month) %>%
summarise(delays = sum(flight_delayed))
flights_data_delayed %>%
filter(origin == "EWR") %>%
group_by(month) %>%
summarise(delays = sum(flight_delayed))
# number of delayed flights at Newark Airport
newark_flights_delayed %>%
group_by(month_name) %>%
summarise(num_delays = n()) %>%
ggplot() +
aes(x = month_name, y = num_delays) +
geom_col(fill = "lightblue") +
labs(
x = "",
y = "number of delays\n",
title = "Newark Airport - number of delayed flights\n"
) +
theme_grey()
flights_data <- read_csv("data/flights.csv") %>%
janitor::clean_names()
flights_data_for_graphs <- flights_data %>%
select(month, dep_delay, origin) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0))
View(flights_data_for_graphs)
colSums(is.na(flights_data_for_graphs))
flights_data_for_graphs <- flights_data %>%
select(month, dep_delay, origin) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
drop_na()
colSums(is.na(flights_data_for_graphs))
flights_data_for_graphs %>%
filter(origin == "EWR") %>%
group_by(month) %>%
summarise(delays = sum(flight_delayed))
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(delays = sum(flight_delayed))
delayed_flights <- flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(delays = sum(flight_delayed))
delayed_flights
total_flights <- flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(flights = sum(flight_count))
total_flights
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count))
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count)) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin) +
geom_line()
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count)) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line() +
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count)) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line()
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line() +
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = (sum(flight_delayed) / sum(flight_count) * 100)) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line()
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line()
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line() +
scale_x_continuous(breaks = 1:12)
flights_data_for_graphs <- flights_data %>%
select(month, dep_delay, origin, time_hour) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
mutate(month_name = month(time_hour, label = TRUE))
drop_na()
flights_data_for_graphs <- flights_data %>%
drop_na()
select(month, dep_delay, origin, time_hour) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
mutate(month_name = month(time_hour, label = TRUE))
flights_data_for_graphs <- flights_data %>%
select(month, dep_delay, origin, time_hour) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
mutate(month_name = month(time_hour, label = TRUE)) %>%
drop_na()
View(flights_data_for_graphs)
flights_data_for_graphs <- flights_data %>%
select(month, dep_delay, origin, time_hour) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
mutate(month_name = month(time_hour, label = TRUE)) %>%
select(-time_hour) %>%
drop_na()
View(flights_data_for_graphs)
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
scale_x_continuous(breaks = 1:12) +
flights_data_for_graphs <- flights_data %>%
select(month, dep_delay, origin, time_hour) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
mutate(month_name = month(time_hour, label = TRUE)) %>%
select(-time_hour) %>%
drop_na()
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line()
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line()
# scale_x_continuous(breaks = 1:12)
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month, y = perc_delays, group = origin, colour = origin) +
geom_line() +
scale_x_continuous(breaks = 1:12)
glimpse(flights_data_for_graphs)
flights_data_for_graphs %>%
group_by(origin, month) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line()
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line()
# scale_x_continuous(breaks = 1:12)
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlabs("") +
ylabs("Percentage of flights (%)") +
title("Flights delayed from NYC airports")
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Percentage of flights (%)") +
title("Flights delayed from NYC airports")
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Percentage of flights (%)") +
ggtitle("Flights delayed from NYC airports")
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Percentage of flights delayed (%)\n") +
ggtitle("Flights delayed from NYC airports")
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Flights delayed (%)\n") +
ggtitle("Flights delayed from NYC airports")
flights_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Flights delayed (%)\n") +
ggtitle("Flights delayed from NYC airports\n")
flights_data_for_graphs %>%
filter(dep_delay > 0) %>%
group_by(origin, month_name) %>%
summarise(avg_delays = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
aes(x = month_name, y = avg_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Average departure delay\n") +
ggtitle("Flights delayed from NYC airports\n")
flights_data_for_graphs %>%
filter(dep_delay > 0) %>%
group_by(origin, month_name) %>%
summarise(avg_delays = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
aes(x = month_name, y = avg_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Average departure delay (mins)\n") +
ggtitle("Flights delayed from NYC airports\n")
flights_data_for_graphs %>%
filter(dep_delay > 0) %>%
group_by(origin, month_name) %>%
summarise(avg_delays = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
aes(x = month_name, y = avg_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Average delay (mins)\n") +
ggtitle("Average departure delay from NYC airports\n")
glimpse(flights_data_for_graphs)
colSums(is.na(flights_data))
# extract sufficient data for visualising delays
delay_data_for_graphs <- flights_data %>%
select(dep_delay, origin, time_hour) %>%
mutate(flight_count = 1) %>%
mutate(flight_delayed = ifelse(dep_delay > 0, 1, 0)) %>%
mutate(month_name = month(time_hour, label = TRUE)) %>%
select(-time_hour) %>%
drop_na()
delay_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Flights delayed (%)\n") +
ggtitle("Flights delayed from NYC airports\n")
delay_data_for_graphs %>%
filter(dep_delay > 0) %>%
group_by(origin, month_name) %>%
summarise(avg_delays = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
aes(x = month_name, y = avg_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Average delay (mins)\n") +
ggtitle("Average departure delay from NYC airports\n")
delay_data_for_graphs %>%
filter(dep_delay > 0) %>%
group_by(origin, month_name) %>%
summarise(avg_delays = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
aes(x = month_name, y = avg_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Average delay (mins)\n") +
ggtitle("Average departure delay from NYC airports (2017)\n")
delay_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Flights delayed (%)\n") +
ggtitle("Flights delayed from NYC airports (2017)\n")
delay_data_for_graphs %>%
group_by(origin, month_name) %>%
summarise(perc_delays = sum(flight_delayed) / sum(flight_count) * 100) %>%
ggplot() +
aes(x = month_name, y = perc_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Flights delayed (%)\n") +
ggtitle("Flights delayed from NYC airports in 2017\n")
delay_data_for_graphs %>%
filter(dep_delay > 0) %>%
group_by(origin, month_name) %>%
summarise(avg_delays = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
aes(x = month_name, y = avg_delays, group = origin, colour = origin) +
geom_line() +
theme(legend.title=element_blank()) +
xlab("") +
ylab("Average delay (mins)\n") +
ggtitle("Average departure delay from NYC airports in 2017\n")
